{"version":3,"sources":["components/Persons.js","components/Filter.js","components/Form.js","components/Notification.js","services/Phonebook.js","App.js","index.js"],"names":["Persons","props","filter","persons","person","name","toLowerCase","startsWith","map","key","id","number","onClick","deleteHandler","Filter","value","onChange","handler","NewPersonForm","onSubmit","formHandler","nameValue","nameHandler","numValue","numHandler","type","Notification","message","setMsg","msg","setTimeout","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setnameFilter","notification","setNotification","useEffect","phonebookServices","initPersons","event","target","preventDefault","newEntry","match","find","window","confirm","p","catch","err","handleEdit","newPerson","addPerson","error","filteredList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e0a7eb4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Persons = (props) => {\r\n  const filter = props.filter;\r\n  const filteredList = props.persons.filter((person) =>\r\n    person.name.toLowerCase().startsWith(filter.toLowerCase())\r\n  );\r\n\r\n  return filteredList.map((person) => (\r\n    <p key={person.id}>\r\n      {person.name}: {person.number}{\" \"}\r\n      <button onClick={() => props.deleteHandler(person)}>Delete</button>\r\n    </p>\r\n  ));\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter by name: <input value={props.value} onChange={props.handler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst NewPersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.formHandler}>\r\n      name: <input value={props.nameValue} onChange={props.nameHandler} />\r\n      number: <input value={props.numValue} onChange={props.numHandler} />\r\n      <button type=\"submit\">add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewPersonForm;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, setMsg }) => {\r\n  if (message.msg === null) {\r\n    return null;\r\n  }\r\n  setTimeout(() => {\r\n    setMsg({ msg: null, type: null });\r\n  }, 3000);\r\n  return <div className={message.type}>{message.msg}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(baseUrl);\r\n  return req.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const req = axios.post(baseUrl, newObject);\r\n  return req.then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const req = axios.delete(`${baseUrl}/${id}`);\r\n  return req.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const req = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return req.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, deletePerson };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Persons from \"./components/Persons\";\r\nimport Filter from \"./components/Filter\";\r\nimport NewPersonForm from \"./components/Form\";\r\nimport Notification from \"./components/Notification\";\r\nimport phonebookServices from \"./services/Phonebook\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [nameFilter, setnameFilter] = useState(\"\");\r\n  const [notification, setNotification] = useState({\r\n    msg: null,\r\n    type: \"success\",\r\n  });\r\n\r\n  // Get persons data from database\r\n  const personsHook = () => {\r\n    phonebookServices.getAll().then((initPersons) => setPersons(initPersons));\r\n  };\r\n  useEffect(personsHook, []);\r\n\r\n  const handleNumChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleFilter = (event) => {\r\n    setnameFilter(event.target.value);\r\n  };\r\n\r\n  const handleDelete = (person) => {\r\n    if (window.confirm(`Are you sure you want to delete ${person.name}`)) {\r\n      phonebookServices.deletePerson(person.id);\r\n      const filteredList = persons.filter((p) => p.id !== person.id);\r\n      setPersons(filteredList);\r\n      setNotification({\r\n        msg: person.name + \" was deleted from the phonebook\",\r\n        type: \"success\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (person, newEntry) => {\r\n    if (\r\n      window.confirm(\r\n        `${person.name} is already in the phonebook, replace the old number with a new one?`\r\n      )\r\n    ) {\r\n      phonebookServices\r\n        .update(person.id, newEntry)\r\n        .then((response) => {\r\n          setPersons(persons.map((p) => (p.id !== response.id ? p : response)));\r\n          setNotification({\r\n            msg: response.name + \" was successfully edited.\",\r\n            type: \"success\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setNotification({\r\n            msg: `Something went wrong. Please try again later.`,\r\n            type: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault();\r\n    const newEntry = { name: newName, number: newNumber };\r\n    const match = persons.find((person) => person.name === newName);\r\n    if (match) {\r\n      handleEdit(match, newEntry);\r\n    } else {\r\n      phonebookServices\r\n        .create(newEntry)\r\n        .then((newPerson) => {\r\n          const addPerson = [...persons, newPerson];\r\n          setPersons(addPerson);\r\n          setNotification({\r\n            msg: newPerson.name + \"was successfully added to the phonebook.\",\r\n            type: \"success\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setNotification({\r\n            msg: `Something went wrong. ${err.response.data.error}`,\r\n            type: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notification} setMsg={setNotification} />\r\n      <Filter value={nameFilter} handler={handleFilter} />\r\n      <h2>Add New</h2>\r\n      <NewPersonForm\r\n        formHandler={addName}\r\n        nameHandler={handleNameChange}\r\n        numHandler={handleNumChange}\r\n        nameValue={newName}\r\n        numValue={newNumber}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={persons}\r\n        filter={nameFilter}\r\n        deleteHandler={handleDelete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}